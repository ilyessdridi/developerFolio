{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilyess\\\\Desktop\\\\portfolio\\\\developerFolio\\\\src\\\\containers\\\\projects\\\\Projects.js\";\n// // import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\n// // import \"./Project.scss\";\n// // import Button from \"../../components/button/Button\";\n// // import {openSource, socialMediaLinks} from \"../../portfolio\";\n// // import StyleContext from \"../../contexts/StyleContext\";\n// // import Loading from \"../../containers/loading/Loading\";\n// // export default function Projects() {\n// //   const GithubRepoCard = lazy(() =>\n// //     import(\"../../components/githubRepoCard/GithubRepoCard\")\n// //   );\n// //   const FailedLoading = () => null;\n// //   const renderLoader = () => <Loading />;\n// //   const [repo, setrepo] = useState([]);\n// //   // todo: remove useContex because is not supported\n// //   const {isDark} = useContext(StyleContext);\n\n// //   useEffect(() => {\n// //     const getRepoData = () => {\n// //       fetch(\"/profile.json\")\n// //         .then(result => {\n// //           if (result.ok) {\n// //             return result.json();\n// //           }\n// //           throw result;\n// //         })\n// //         .then(response => {\n// //           setrepoFunction(response.data.user.pinnedItems.edges);\n// //         })\n// //         .catch(function (error) {\n// //           console.error(\n// //             `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n// //           );\n// //           setrepoFunction(\"Error\");\n// //         });\n// //     };\n// //     getRepoData();\n// //   }, []);\n\n// //   function setrepoFunction(array) {\n// //     setrepo(array);\n// //   }\n// //   if (\n// //     !(typeof repo === \"string\" || repo instanceof String) &&\n// //     openSource.display\n// //   ) {\n// //     return (\n// //       <Suspense fallback={renderLoader()}>\n// //         <div className=\"main\" id=\"opensource\">\n// //           <h1 className=\"project-title\">Open Source Projects</h1>\n// //           <div className=\"repo-cards-div-main\">\n// //             {repo.map((v, i) => {\n// //               if (!v) {\n// //                 console.error(\n// //                   `Github Object for repository number : ${i} is undefined`\n// //                 );\n// //               }\n// //               return (\n// //                 <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n// //               );\n// //             })}\n// //           </div>\n// //           <Button\n// //             text={\"More Projects\"}\n// //             className=\"project-button\"\n// //             href={socialMediaLinks.github}\n// //             newTab={true}\n// //           />\n// //         </div>\n// //       </Suspense>\n// //     );\n// //   } else {\n// //     return <FailedLoading />;\n// //   }\n// // }\n\n// import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\n// import \"./Project.scss\";\n// import Button from \"../../components/button/Button\";\n// import {openSource, socialMediaLinks} from \"../../portfolio\";\n// import StyleContext from \"../../contexts/StyleContext\";\n// import Loading from \"../../containers/loading/Loading\";\n\n// export default function Projects() {\n//   const GithubRepoCard = lazy(() =>\n//     import(\"../../components/githubRepoCard/GithubRepoCard\")\n//   );\n//   const FailedLoading = () => null;\n//   const renderLoader = () => <Loading />;\n//   const [repo, setrepo] = useState([]);\n//   const {isDark} = useContext(StyleContext);\n\n//   // Modal state for demo video\n//   const [showDemo, setShowDemo] = useState(false);\n//   const [demoVideo, setDemoVideo] = useState(null);\n\n//   useEffect(() => {\n//     const getRepoData = () => {\n//       fetch(\"/profile.json\")\n//         .then(result => {\n//           if (result.ok) {\n//             return result.json();\n//           }\n//           throw result;\n//         })\n//         .then(response => {\n//           setrepoFunction(response.data.user.pinnedItems.edges);\n//         })\n//         .catch(function (error) {\n//           console.error(\n//             `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n//           );\n//           setrepoFunction(\"Error\");\n//         });\n//     };\n//     getRepoData();\n//   }, []);\n\n//   function setrepoFunction(array) {\n//     setrepo(array);\n//   }\n\n//   // Handler to open demo modal\n//   function handleViewDemo(videoUrl) {\n//     setDemoVideo(videoUrl);\n//     setShowDemo(true);\n//   }\n\n//   if (\n//     !(typeof repo === \"string\" || repo instanceof String) &&\n//     openSource.display\n//   ) {\n//     return (\n//       <Suspense fallback={renderLoader()}>\n//         <div className=\"main\" id=\"opensource\">\n//           <h1 className=\"project-title\">Open Source Projects</h1>\n//           <div className=\"repo-cards-div-main\">\n//             {repo.map((v, i) => {\n//               if (!v) {\n//                 console.error(\n//                   `Github Object for repository number : ${i} is undefined`\n//                 );\n//               }\n//               // Pass handleViewDemo to GithubRepoCard\n//               return (\n//                 <GithubRepoCard\n//                   repo={v}\n//                   key={v.node.id}\n//                   isDark={isDark}\n//                   onViewDemo={handleViewDemo}\n//                 />\n//               );\n//             })}\n//           </div>\n//           <Button\n//             text={\"More Projects\"}\n//             className=\"project-button\"\n//             href={socialMediaLinks.github}\n//             newTab={true}\n//           />\n//           {/* Demo Video Modal */}\n//           {showDemo && demoVideo && (\n//             <div\n//               className=\"demo-modal\"\n//               style={{\n//                 position: \"fixed\",\n//                 top: 0,\n//                 left: 0,\n//                 right: 0,\n//                 bottom: 0,\n//                 background: \"rgba(0,0,0,0.7)\",\n//                 display: \"flex\",\n//                 alignItems: \"center\",\n//                 justifyContent: \"center\",\n//                 zIndex: 1000\n//               }}\n//             >\n//               <div\n//                 style={{\n//                   background: \"#fff\",\n//                   padding: 20,\n//                   borderRadius: 8,\n//                   maxWidth: 600,\n//                   width: \"90%\"\n//                 }}\n//               >\n//                 <video src={demoVideo} controls style={{width: \"100%\"}} />\n//                 <button\n//                   onClick={() => setShowDemo(false)}\n//                   style={{marginTop: 10}}\n//                 >\n//                   Close\n//                 </button>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </Suspense>\n//     );\n//   } else {\n//     return <FailedLoading />;\n//   }\n// }\nimport React from \"react\";\nimport \"./GithubRepoCard.scss\";\nimport { Fade } from \"react-reveal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GithubRepoCard(_ref) {\n  let {\n    repo,\n    onViewDemo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    bottom: true,\n    duration: 1000,\n    distance: \"20px\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo-card-div-simple\",\n      children: [repo.node.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: repo.node.image,\n        alt: repo.node.name,\n        style: {\n          width: \"100%\",\n          borderRadius: \"10px\",\n          marginBottom: \"12px\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), onViewDemo && repo.node.demoVideo && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-demo-btn\",\n        style: {\n          padding: \"8px 16px\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          background: \"#007bff\",\n          color: \"#fff\",\n          cursor: \"pointer\"\n        },\n        onClick: e => {\n          e.stopPropagation();\n          onViewDemo(repo.node.demoVideo);\n        },\n        children: \"View Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_c = GithubRepoCard;\nvar _c;\n$RefreshReg$(_c, \"GithubRepoCard\");","map":{"version":3,"names":["React","Fade","jsxDEV","_jsxDEV","GithubRepoCard","_ref","repo","onViewDemo","bottom","duration","distance","children","className","node","image","src","alt","name","style","width","borderRadius","marginBottom","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","demoVideo","padding","border","background","color","cursor","onClick","e","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/ilyess/Desktop/portfolio/developerFolio/src/containers/projects/Projects.js"],"sourcesContent":["// // import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\n// // import \"./Project.scss\";\n// // import Button from \"../../components/button/Button\";\n// // import {openSource, socialMediaLinks} from \"../../portfolio\";\n// // import StyleContext from \"../../contexts/StyleContext\";\n// // import Loading from \"../../containers/loading/Loading\";\n// // export default function Projects() {\n// //   const GithubRepoCard = lazy(() =>\n// //     import(\"../../components/githubRepoCard/GithubRepoCard\")\n// //   );\n// //   const FailedLoading = () => null;\n// //   const renderLoader = () => <Loading />;\n// //   const [repo, setrepo] = useState([]);\n// //   // todo: remove useContex because is not supported\n// //   const {isDark} = useContext(StyleContext);\n\n// //   useEffect(() => {\n// //     const getRepoData = () => {\n// //       fetch(\"/profile.json\")\n// //         .then(result => {\n// //           if (result.ok) {\n// //             return result.json();\n// //           }\n// //           throw result;\n// //         })\n// //         .then(response => {\n// //           setrepoFunction(response.data.user.pinnedItems.edges);\n// //         })\n// //         .catch(function (error) {\n// //           console.error(\n// //             `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n// //           );\n// //           setrepoFunction(\"Error\");\n// //         });\n// //     };\n// //     getRepoData();\n// //   }, []);\n\n// //   function setrepoFunction(array) {\n// //     setrepo(array);\n// //   }\n// //   if (\n// //     !(typeof repo === \"string\" || repo instanceof String) &&\n// //     openSource.display\n// //   ) {\n// //     return (\n// //       <Suspense fallback={renderLoader()}>\n// //         <div className=\"main\" id=\"opensource\">\n// //           <h1 className=\"project-title\">Open Source Projects</h1>\n// //           <div className=\"repo-cards-div-main\">\n// //             {repo.map((v, i) => {\n// //               if (!v) {\n// //                 console.error(\n// //                   `Github Object for repository number : ${i} is undefined`\n// //                 );\n// //               }\n// //               return (\n// //                 <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n// //               );\n// //             })}\n// //           </div>\n// //           <Button\n// //             text={\"More Projects\"}\n// //             className=\"project-button\"\n// //             href={socialMediaLinks.github}\n// //             newTab={true}\n// //           />\n// //         </div>\n// //       </Suspense>\n// //     );\n// //   } else {\n// //     return <FailedLoading />;\n// //   }\n// // }\n\n// import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\n// import \"./Project.scss\";\n// import Button from \"../../components/button/Button\";\n// import {openSource, socialMediaLinks} from \"../../portfolio\";\n// import StyleContext from \"../../contexts/StyleContext\";\n// import Loading from \"../../containers/loading/Loading\";\n\n// export default function Projects() {\n//   const GithubRepoCard = lazy(() =>\n//     import(\"../../components/githubRepoCard/GithubRepoCard\")\n//   );\n//   const FailedLoading = () => null;\n//   const renderLoader = () => <Loading />;\n//   const [repo, setrepo] = useState([]);\n//   const {isDark} = useContext(StyleContext);\n\n//   // Modal state for demo video\n//   const [showDemo, setShowDemo] = useState(false);\n//   const [demoVideo, setDemoVideo] = useState(null);\n\n//   useEffect(() => {\n//     const getRepoData = () => {\n//       fetch(\"/profile.json\")\n//         .then(result => {\n//           if (result.ok) {\n//             return result.json();\n//           }\n//           throw result;\n//         })\n//         .then(response => {\n//           setrepoFunction(response.data.user.pinnedItems.edges);\n//         })\n//         .catch(function (error) {\n//           console.error(\n//             `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n//           );\n//           setrepoFunction(\"Error\");\n//         });\n//     };\n//     getRepoData();\n//   }, []);\n\n//   function setrepoFunction(array) {\n//     setrepo(array);\n//   }\n\n//   // Handler to open demo modal\n//   function handleViewDemo(videoUrl) {\n//     setDemoVideo(videoUrl);\n//     setShowDemo(true);\n//   }\n\n//   if (\n//     !(typeof repo === \"string\" || repo instanceof String) &&\n//     openSource.display\n//   ) {\n//     return (\n//       <Suspense fallback={renderLoader()}>\n//         <div className=\"main\" id=\"opensource\">\n//           <h1 className=\"project-title\">Open Source Projects</h1>\n//           <div className=\"repo-cards-div-main\">\n//             {repo.map((v, i) => {\n//               if (!v) {\n//                 console.error(\n//                   `Github Object for repository number : ${i} is undefined`\n//                 );\n//               }\n//               // Pass handleViewDemo to GithubRepoCard\n//               return (\n//                 <GithubRepoCard\n//                   repo={v}\n//                   key={v.node.id}\n//                   isDark={isDark}\n//                   onViewDemo={handleViewDemo}\n//                 />\n//               );\n//             })}\n//           </div>\n//           <Button\n//             text={\"More Projects\"}\n//             className=\"project-button\"\n//             href={socialMediaLinks.github}\n//             newTab={true}\n//           />\n//           {/* Demo Video Modal */}\n//           {showDemo && demoVideo && (\n//             <div\n//               className=\"demo-modal\"\n//               style={{\n//                 position: \"fixed\",\n//                 top: 0,\n//                 left: 0,\n//                 right: 0,\n//                 bottom: 0,\n//                 background: \"rgba(0,0,0,0.7)\",\n//                 display: \"flex\",\n//                 alignItems: \"center\",\n//                 justifyContent: \"center\",\n//                 zIndex: 1000\n//               }}\n//             >\n//               <div\n//                 style={{\n//                   background: \"#fff\",\n//                   padding: 20,\n//                   borderRadius: 8,\n//                   maxWidth: 600,\n//                   width: \"90%\"\n//                 }}\n//               >\n//                 <video src={demoVideo} controls style={{width: \"100%\"}} />\n//                 <button\n//                   onClick={() => setShowDemo(false)}\n//                   style={{marginTop: 10}}\n//                 >\n//                   Close\n//                 </button>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </Suspense>\n//     );\n//   } else {\n//     return <FailedLoading />;\n//   }\n// }\nimport React from \"react\";\nimport \"./GithubRepoCard.scss\";\nimport {Fade} from \"react-reveal\";\n\nexport default function GithubRepoCard({repo, onViewDemo}) {\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"repo-card-div-simple\">\n        {/* Show project image if available */}\n        {repo.node.image && (\n          <img\n            src={repo.node.image}\n            alt={repo.node.name}\n            style={{\n              width: \"100%\",\n              borderRadius: \"10px\",\n              marginBottom: \"12px\",\n              objectFit: \"cover\"\n            }}\n          />\n        )}\n        {/* View Demo Button */}\n        {onViewDemo && repo.node.demoVideo && (\n          <button\n            className=\"view-demo-btn\"\n            style={{\n              padding: \"8px 16px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              background: \"#007bff\",\n              color: \"#fff\",\n              cursor: \"pointer\"\n            }}\n            onClick={e => {\n              e.stopPropagation();\n              onViewDemo(repo.node.demoVideo);\n            }}\n          >\n            View Demo\n          </button>\n        )}\n      </div>\n    </Fade>\n  );\n}"],"mappingszB,OAAO,uBAAuB;AAC9B,SAAQC,IAAI,QAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAACC,IAAI;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACvD,oBACEF,OAAA,CAACF,IAAI;IAACO,MAAM;IAACC,QAAQ,EAAE,IAAK;IAACC,QAAQ,EAAC,MAAM;IAAAC,QAAA,eAC1CR,OAAA;MAAKS,SAAS,EAAC,sBAAsB;MAAAD,QAAA,GAElCL,IAAI,CAACO,IAAI,CAACC,KAAK,iBACdX,OAAA;QACEY,GAAG,EAAET,IAAI,CAACO,IAAI,CAACC,KAAM;QACrBE,GAAG,EAAEV,IAAI,CAACO,IAAI,CAACI,IAAK;QACpBC,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,YAAY,EAAE,MAAM;UACpBC,YAAY,EAAE,MAAM;UACpBC,SAAS,EAAE;QACb;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF,EAEAnB,UAAU,IAAID,IAAI,CAACO,IAAI,CAACc,SAAS,iBAChCxB,OAAA;QACES,SAAS,EAAC,eAAe;QACzBM,KAAK,EAAE;UACLU,OAAO,EAAE,UAAU;UACnBR,YAAY,EAAE,KAAK;UACnBS,MAAM,EAAE,MAAM;UACdC,UAAU,EAAE,SAAS;UACrBC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE;QACV,CAAE;QACFC,OAAO,EAAEC,CAAC,IAAI;UACZA,CAAC,CAACC,eAAe,CAAC,CAAC;UACnB5B,UAAU,CAACD,IAAI,CAACO,IAAI,CAACc,SAAS,CAAC;QACjC,CAAE;QAAAhB,QAAA,EACH;MAED;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACU,EAAA,GAxCuBhC,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}